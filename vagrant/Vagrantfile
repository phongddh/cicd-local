Vagrant.configure("2") do |config|

  # Define the dev VM
  config.vm.define "dev" do |dev|
    dev.vm.box = "generic/ubuntu2204"
    dev.vm.network "private_network", ip: "192.168.56.12"
    dev.vm.hostname = "dev"

    dev.vm.provider "virtualbox" do |vb|
      vb.name = "dev"
      vb.cpus = 2
      vb.memory = "2048"
    end

    # Run shell commands
    dev.vm.provision "shell", inline: <<-SHELL
      # Remove password for access root account and allow SSH with key
      echo "root:@@@123###" | chpasswd
      sed -i 's/^#PasswordAuthentication no/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
      sed -i 's/^PubkeyAuthentication no/PubkeyAuthentication yes/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2/AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2
      systemctl reload sshd
      # Copy contents of host's id_rsa.pub into authorized_keys
      mkdir -p ~/.ssh
      cat ./vagrant/keys >> ~/.ssh/authorized_keys
      # Append the following content to /etc/hosts for accessing machines by HOSTNAME
      cat >>/etc/hosts<<EOF
      192.168.56.10 prod
      192.168.56.11 stag
      192.168.56.12 dev
      192.168.56.50 gitlab
      192.168.56.60 jenkins
EOF
    SHELL
  end

  # Define the stag VM
  config.vm.define "stag" do |stag|
    stag.vm.box = "generic/ubuntu2204"
    stag.vm.network "private_network", ip: "192.168.56.11"
    stag.vm.hostname = "stag"

    stag.vm.provider "virtualbox" do |vb|
      vb.name = "stag"
      vb.cpus = 2
      vb.memory = "2048"
    end

    # Run shell commands
    stag.vm.provision "shell", inline: <<-SHELL
      # Remove password for access root account and allow SSH with key
      echo "root:@@@123###" | chpasswd
      sed -i 's/^#PasswordAuthentication no/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile yes/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^AuthorizedKeysFile no/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2/AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2
      systemctl reload sshd
      # Copy contents of host's id_rsa.pub into authorized_keys
      mkdir -p ~/.ssh
      cat ./vagrant/keys >> ~/.ssh/authorized_keys
      # Append the following content to /etc/hosts for accessing machines by HOSTNAME
      cat >>/etc/hosts<<EOF
      192.168.56.10 prod
      192.168.56.11 stag
      192.168.56.12 dev
      192.168.56.50 gitlab
      192.168.56.60 jenkins
EOF
    SHELL
  end

  # Define the prod VM
  config.vm.define "prod" do |prod|
    prod.vm.box = "generic/ubuntu2204"
    prod.vm.network "private_network", ip: "192.168.56.10"
    prod.vm.hostname = "prod"

    prod.vm.provider "virtualbox" do |vb|
      vb.name = "prod"
      vb.cpus = 2
      vb.memory = "2048"
    end

    # Run shell commands
    prod.vm.provision "shell", inline: <<-SHELL
      # Remove password for access root account and allow SSH with key
      echo "root:@@@123###" | chpasswd
      sed -i 's/^#PasswordAuthentication no/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile yes/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^AuthorizedKeysFile no/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2/AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2
      systemctl reload sshd
      # Copy contents of host's id_rsa.pub into authorized_keys
      mkdir -p ~/.ssh
      cat ./vagrant/keys >> ~/.ssh/authorized_keys
      # Append the following content to /etc/hosts for accessing machines by HOSTNAME
      cat >>/etc/hosts<<EOF
      192.168.56.10 prod
      192.168.56.11 stag
      192.168.56.12 dev
      192.168.56.50 gitlab
      192.168.56.60 jenkins
EOF
    SHELL
  end

  # Define the gitlab VM
  config.vm.define "gitlab" do |gitlab|
    gitlab.vm.box = "generic/ubuntu2204"
    gitlab.vm.network "private_network", ip: "192.168.56.50"
    gitlab.vm.hostname = "gitlab"

    gitlab.vm.provider "virtualbox" do |vb|
      vb.name = "gitlab"
      vb.cpus = 2
      vb.memory = "2048"
    end

    # Run shell commands
    gitlab.vm.provision "shell", inline: <<-SHELL
      # Remove password for access root account and allow SSH with key
      echo "root:@@@123###" | chpasswd
      sed -i 's/^#PasswordAuthentication no/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile yes/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^AuthorizedKeysFile no/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2/AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2
      systemctl reload sshd
      # Copy contents of host's id_rsa.pub into authorized_keys
      mkdir -p ~/.ssh
      cat ./vagrant/keys >> ~/.ssh/authorized_keys
      # Append the following content to /etc/hosts for accessing machines by HOSTNAME
      cat >>/etc/hosts<<EOF
      192.168.56.10 prod
      192.168.56.11 stag
      192.168.56.12 dev
      192.168.56.50 gitlab
      192.168.56.60 jenkins
EOF
    SHELL

    # Run Ansible playbook
    gitlab.vm.provision "ansible" do |ansible|
      ansible.playbook = "../ansible/playbook.yml"
      ansible.inventory_path = "../ansible/inventory"
    end
  end

  # Define the jenkins VM
  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.box = "generic/ubuntu2204"
    jenkins.vm.network "private_network", ip: "192.168.56.60"
    jenkins.vm.hostname = "jenkins"

    jenkins.vm.provider "virtualbox" do |vb|
      vb.name = "jenkins"
      vb.cpus = 2
      vb.memory = "2048"
    end

    # Run shell commands
    jenkins.vm.provision "shell", inline: <<-SHELL
      # Remove password for access root account and allow SSH with key
      echo "root:@@@123###" | chpasswd
      sed -i 's/^#PasswordAuthentication no/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile yes/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^AuthorizedKeysFile no/AuthorizedKeysFile yes/' /etc/ssh/sshd_config
      sed -i 's/^#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2/AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_keys2
      systemctl reload sshd
      # Copy contents of host's id_rsa.pub into authorized_keys
      mkdir -p ~/.ssh
      cat ./vagrant/keys >> ~/.ssh/authorized_keys
      # Append the following content to /etc/hosts for accessing machines by HOSTNAME
      cat >>/etc/hosts<<EOF
      192.168.56.10 prod
      192.168.56.11 stag
      192.168.56.12 dev
      192.168.56.50 gitlab
      192.168.56.60 jenkins
EOF
    SHELL
  end

end